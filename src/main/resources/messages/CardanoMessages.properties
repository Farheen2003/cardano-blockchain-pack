cardano.prop.networkType=Network Type
cardano.prop.networkType.mainnet=Mainnet
cardano.prop.networkType.testnet=Testnet
cardano.prop.backendService=Backend Service
cardano.prop.backendService.blockfrost=Blockfrost
cardano.prop.backendService.dandelion=Dandelion
cardano.prop.backendService.customGraphql=Custom GraphQL API
cardano.prop.blockfrostProjectKey=Blockfrost Project Key
cardano.prop.blockfrostProjectKey.desc=Go to <b><a target="_blank" href="https://blockfrost.io/">blockfrost.io</a></b> and sign up for an account. There is a free account option. Paste in your generated project API key.
cardano.prop.graphqlEndpointUrl=GraphQL Endpoint URL

process.cardanogenerateaccounttool.header.config=Configure Cardano Generate Account Tool
process.cardanogenerateaccounttool.networkType.desc="mainnet" uses <b>real-world</b> tokens.<br>Please use "testnet" for testing purposes.
process.cardanogenerateaccounttool.header.storeToForm=Store Account Data To Form
process.cardanogenerateaccounttool.formId=Form
process.cardanogenerateaccounttool.header.fieldMapping=Field Mapping
process.cardanogenerateaccounttool.fieldMapping.accountMnemonicField=Account Mnemonic Phrase (encrypted)
process.cardanogenerateaccounttool.fieldMapping.accountMnemonicField.desc=Account Mnemonic Phrase <b>MUST</b> be strictly secured at all times, and only viewable to the intended user.<br>This value will be stored as encrypted value in the database.<br><b>Anyone who possesses this phrase has full unrestricted control and can do irreparable damage!</b>
process.cardanogenerateaccounttool.fieldMapping.accountOwnerField=Account Owner Field
process.cardanogenerateaccounttool.fieldMapping.accountOwnerValue=Account Owner Value
process.cardanogenerateaccounttool.fieldMapping.accountOwnerValue.desc=Accepts a hash variable. Typically points to an actual user (e.g.: Joget username).
process.cardanogenerateaccounttool.fieldMapping.isTestAccount=Is Test Account Flag
process.cardanogenerateaccounttool.fieldMapping.accountEnterpriseAddress=Account Enterprise Address
process.cardanogenerateaccounttool.header.storeToWorkflowVariable=Store Data To Workflow Variable
process.cardanogenerateaccounttool.wfMapping.wfIsTestAccount=Is Test Account Flag

process.cardanosendtransactiontool.header.config=Configure Cardano Send Transaction Tool
process.cardanosendtransactiontool.networkType.desc="mainnet" uses <b>real-world</b> tokens.<br>Please use "testnet" for testing purposes.
process.cardanosendtransactiontool.header.transactionDetails=Transaction Details
process.cardanosendtransactiontool.senderAddress=Sender Address
process.cardanosendtransactiontool.senderAddress.desc=Address to send funds from. Hash variable is also accepted.
process.cardanosendtransactiontool.accountMnemonic=Sender Account Mnemonic Phrase
process.cardanosendtransactiontool.accountMnemonic.desc=Mnemonic phrase of the sender account. Only accepts a hash variable that points to the encrypted stored mnemonic phrase.
process.cardanosendtransactiontool.receiverAddress=Receiver Address
process.cardanosendtransactiontool.receiverAddress.desc=Address to send funds to. Hash variable is also accepted.
process.cardanosendtransactiontool.paymentUnit=Payment Unit
process.cardanosendtransactiontool.paymentUnit.desc=To transfer ADA or a specified native token
process.cardanosendtransactiontool.paymentUnit.lovelace=ADA
process.cardanosendtransactiontool.paymentUnit.nativeTokens=Native Token
process.cardanosendtransactiontool.policyId=Policy ID
process.cardanosendtransactiontool.policyId.desc=The policy ID that minted such native token, denoted in formats of:<br><b>policyId</b> or <b>policyId.assetName</b>
process.cardanosendtransactiontool.amount=Amount To Send
process.cardanosendtransactiontool.amount.desc=Amount of tokens to send.<br>For ADA specifically, amount can only contain max 6 decimal places.<br>Hash variable is also accepted.<br>Ensure that you comply with the <b><a target="_blank" href="https://docs.cardano.org/native-tokens/minimum-ada-value-requirement">minimum ADA requirement</a></b>.
process.cardanosendtransactiontool.enableMetadata=Enable Transaction Metadata
process.cardanosendtransactiontool.formDefId=Form
process.cardanosendtransactiontool.metadata=Metadata
process.cardanosendtransactiontool.metadata.fieldId=Field ID
process.cardanosendtransactiontool.header.storeToWorkflowVariable=Store Response To Workflow Variable
process.cardanosendtransactiontool.wfMapping.wfTransactionValidated=Is Transaction Validated
process.cardanosendtransactiontool.wfMapping.wfTransactionId=Transaction ID
process.cardanosendtransactiontool.wfMapping.wfTransactionExplorerUrl=Transaction Explorer URL

form.cardanoaccountloadbinder.header.config=Configure Cardano Account Load Binder
form.cardanoaccountloadbinder.networkType.desc="mainnet" reads data that exists only on the mainnet.<br>Please use "testnet" for testing purposes.
form.cardanoaccountloadbinder.accountAddress=Account Address
form.cardanoaccountloadbinder.accountAddress.desc=Account base address. Hash variable is also accepted.
form.cardanoaccountloadbinder.header.mapToFields=Map Value To Form Fields
form.cardanoaccountloadbinder.mapToFields.balanceField=Current Account Balance
form.cardanoaccountloadbinder.mapToFields.accountType=Account Type

form.cardanometadataloadbinder.header.config=Configure Cardano Metadata Load Binder
form.cardanometadataloadbinder.networkType.desc="mainnet" reads data that exists only on the mainnet.<br>Please use "testnet" for testing purposes.
form.cardanometadataloadbinder.transactionId=Transaction ID
form.cardanometadataloadbinder.transactionId.desc=Also known as Transaction Hash, Tx Hash, or TxID. Hash variable is also accepted.
form.cardanometadataloadbinder.header.mapToFields=Map Metadata Fields To Form Fields
form.cardanometadataloadbinder.metadata=Metadata
form.cardanometadataloadbinder.metadata.metadataField=Metadata Field
form.cardanometadataloadbinder.metadata.formFieldId=Form Field ID
